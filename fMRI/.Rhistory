(missing.circulatory.death == 15))) %>%
# filter to countries with no recorded data
filter(no.data) %>%
# arrange alphabetically by region and country
arrange(region, country) %>%
select(region, country)
countries.no.data <- organs.clean %>% group_by(country) %>%
# identify how many missing values are recorded for each country in the summary columns
summarise(region = unique(region),
n = n(),
missing.deceased = sum(is.na(total.deceased.donors)),
missing.brain.dead = sum(is.na(brain.dead.donors)),
missing.circulatory.death = sum(is.na(circulatory.death.donors))) %>%
# identify countries that have completely missing data
mutate(no.data = ((missing.deceased == 15) &
(missing.brain.dead == 15) &
(missing.circulatory.death == 15))) %>%
# filter to countries with no recorded data
filter(no.data) %>%
# arrange alphabetically by region and country
arrange(region, country) %>%
select(region, country)
datatable(countries.no.data,
caption = "Countries with no transplant data")
organs.clean <- organs.clean %>%
filter(!(country %in% countries.no.data$country))
donor.totals <- organs.clean %>%
select(region, country, year, population,
total.deceased.donors)
donor.totals <- melt(donor.totals,
id.vars = c("region", "country", "year", "population"))
donor.totals <- donor.totals %>% select(region, country, year,
population, count = value)
donor.utilized <- organs.clean %>%
select(region, country, year, population,
utilized.brain.dead.donors,
utilized.circulatory.death.donors)
donor.utilized <- melt(donor.utilized,
id.vars = c("region", "country", "year", "population"))
donor.utilized$death <- sapply(strsplit(as.character(donor.utilized$variable), "\\."),
function(x) {
paste(x[x %in% c("brain", "circulatory")],
collapse = " ")
})
donor.utilized <- donor.utilized %>% select(region, country, year,
population, death, count = value)
organ.donor.death <- organs.clean %>%
select(region, country, year, population,
deceased.kidney.donors,
living.kidney.donors,
deceased.liver.donors,
domino.liver.donors,
living.liver.donors,
deceased.lung.donors,
living.lung.donors)
organ.donor.death <- melt(organ.donor.death,
id.vars = c("region", "country",
"year", "population"))
organ.donor.death$organ <- sapply(strsplit(as.character(organ.donor.death$variable), "\\."),
function(x) {
paste(x[x %in% c("kidney", "liver", "small",
"bowel", "lung", "pancreas")],
collapse = " ")
})
organ.donor.death$deceased <- sapply(strsplit(as.character(organ.donor.death$variable), "\\."),
function(x) {
paste(x[x %in% c("deceased", "living", "domino")],
collapse = " ")
})
organ.donor.death <- organ.donor.death %>% select(region, country, year,
population, organ, deceased,
count = value)
organ.donor.totals <- organs.clean %>%
select(region, country, year, population,
total.kidney.donors,
total.liver.donors,
total.lung.donors,
total.pancreas.donors,
total.kidney.pancreas.donors,
total.small.bowel.donors)
organ.donor.totals <- melt(organ.donor.totals,
id.vars = c("region", "country",
"year", "population"))
organ.donor.totals$organ <- sapply(strsplit(as.character(organ.donor.totals$variable), "\\."),
function(x) {
paste(x[x %in% c("kidney", "liver", "small",
"bowel", "lung", "pancreas")],
collapse = " ")
})
organ.donor.totals <- organ.donor.totals %>% select(region, country, year, population, organ, count = value)
organ.donor.totals <- organ.donor.totals %>%
mutate(count.by.pop = count / population)
organ.donor.death <- organ.donor.death %>%
mutate(count.by.pop = count / population)
donor.utilized <- donor.utilized %>%
mutate(count.by.pop = count / population)
donor.totals <- donor.totals %>%
mutate(count.by.pop = count / population)
head(donor.totals)
head(organ.donor.death)
head(donor.totals)
total.organs <- donor.totals %>%
filter(year > 2005,
year < 2015)
few.missing.country <- total.organs %>%
group_by(country) %>%
# is there more than 1 year with missing data?
summarise(missing = sum(is.na(count.by.pop)) > 1) %>%
# remove these countries for which there is more than 1 year missing
filter(!missing) %>%
# isolte the unfiltered countries
select(country) %>%
unlist %>% as.character
total.organs <- total.organs %>%
filter(country %in% few.missing.country)
donor.matrix <- acast(total.organs,
year ~ country,
value.var = "count.by.pop")
hdi <- read.csv("raw_data/hdi.csv", header = F)
colnames(hdi) <- (hdi[2,])
hdi <- hdi[3:nrow(hdi),]
colnames(hdi)[1:2] <- c("rank", "country")
hdi <- melt(hdi, id.vars = c("country", "rank"))
colnames(hdi) <- c("country", "rank", "year", "hdi")
hdi$country <- gsub(" ", "", as.character(hdi$country))
colnames(donor.matrix)[!(colnames(donor.matrix) %in% unique(hdi$country))]
hdi[hdi$country == "CzechRepublic", "country"] <- "Czech Republic"
hdi[hdi$country == "DominicanRepublic", "country"] <- "Dominican Republic"
hdi[hdi$country == "Iran(IslamicRepublicof)", "country"] <- "Iran (Islamic Republic of)"
hdi[hdi$country == "NewZealand", "country"] <- "New Zealand"
hdi[hdi$country == "Korea(Republicof)", "country"] <- "Republic of Korea"
hdi[hdi$country == "SaudiArabia", "country"] <- "Saudi Arabia"
hdi[hdi$country == "SouthAfrica", "country"] <- "South Africa"
hdi[hdi$country == "UnitedKingdom", "country"] <- "United Kingdom"
hdi[hdi$country == "UnitedStates", "country"] <- "United States of America"
hdi[hdi$country == "Venezuela(BolivarianRepublicof)", "country"] <- "Venezuela (Bolivarian Republic of)"
hdi.match <- left_join(data.frame(country = colnames(donor.matrix)),
hdi,
by = "country")
hdi.match.2014 <- hdi.match %>% filter(year == 2014)
country.region <- organs.clean %>% select(country, region) %>% distinct
region.match <- left_join(data.frame(country = colnames(donor.matrix)),
country.region,
by = "country")
organs.by.year <- total.organs %>%
group_by(year) %>%
summarise(total = sum(count, na.rm = TRUE)) %>%
select(total) %>%
unlist
organs.by.country = total.organs %>%
group_by(country) %>%
summarise(total = mean(count / population, na.rm = TRUE) * 100000)
organs.by.country <- left_join(data.frame(country = colnames(donor.matrix)),
organs.by.country,
by = "country")
organs.by.country <- organs.by.country$total
superheat(t(as.matrix(donor.matrix)) * 100000,
order.rows = order(organs.by.country),
grid.hline.col = "white",
grid.vline.col = "white",
# right plot
yr = as.numeric(as.character(hdi.match.2014$rank)),
yr.plot.type = "bar",
yr.axis.name = "Human Development Ranking",
yr.plot.size = 0.5,
# top plot
yt = organs.by.year,
yt.plot.type = "line",
yt.axis.name = "total number\nof transplants\nper year",
heat.na.col = "white",
left.label.size = 0.5,
left.label.text.size = 3,
bottom.label.col = "white",
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
padding = 0,
title = "Transplants from deceased donors")
clean.colnames <- c("region", "country", "year",
"population",
"total.deceased.donors",
"brain.dead.donors",
"circulatory.death.donors",
"total.utilized.deceased.donors",
"utilized.brain.dead.donors",
"utilized.circulatory.death.donors",
"deceased.kidney.donors",
"living.kidney.donors",
"total.kidney.donors",
"deceased.liver.donors",
"domino.liver.donors",
"living.liver.donors",
"total.liver.donors",
"deceased.lung.donors",
"living.lung.donors",
"total.lung.donors",
"total.pancreas.donors",
"total.kidney.pancreas.donors",
"total.small.bowel.donors")
organs.clean <- organs.original
colnames(organs.clean) <- clean.colnames
countries.no.data <- organs.clean %>% group_by(country) %>%
# identify how many missing values are recorded for each country in the summary columns
summarise(region = unique(region),
n = n(),
missing.deceased = sum(is.na(total.deceased.donors)),
missing.brain.dead = sum(is.na(brain.dead.donors)),
missing.circulatory.death = sum(is.na(circulatory.death.donors))) %>%
# identify countries that have completely missing data
mutate(no.data = ((missing.deceased == 15) &
(missing.brain.dead == 15) &
(missing.circulatory.death == 15))) %>%
# filter to countries with no recorded data
filter(no.data) %>%
# arrange alphabetically by region and country
arrange(region, country) %>%
select(region, country)
datatable(countries.no.data,
caption = "Countries with no transplant data")
donor.utilized <- organs.clean %>%
select(region, country, year, population,
utilized.brain.dead.donors,
utilized.circulatory.death.donors)
donor.utilized <- melt(donor.utilized,
id.vars = c("region", "country", "year", "population"))
head(donor.utilized)
hdi.match <- left_join(data.frame(country = unique(donor.totals$country)),
hdi,
by = "country")
unique(donor.totals$country)
DT::datatable(donor.matrix, fillContainer = T,
height = 600, options = list(scrollY = 350))
total.organs <- donor.totals %>%
filter(year > 2005,
year < 2015)
few.missing.country <- total.organs %>%
group_by(country) %>%
# is there more than 1 year with missing data?
summarise(missing = sum(is.na(count.by.pop)) > 1) %>%
# remove these countries for which there is more than 1 year missing
filter(!missing) %>%
# isolte the unfiltered countries
select(country) %>%
unlist %>% as.character
total.organs <- total.organs %>%
filter(country %in% few.missing.country)
donor.matrix <- acast(total.organs,
year ~ country,
value.var = "count.by.pop")
head(donor.matrix)
kable(donor.matrix)
kable(head(donor.matrix[, 1:6]))
order(organs.by.country)
dim(donor.matrix)
total.organs <- donor.totals %>%
filter(year > 2005,
year < 2015)
few.missing.country <- total.organs %>%
group_by(country) %>%
# is there more than 1 year with missing data?
summarise(missing = sum(is.na(count.by.pop)) > 1) %>%
# remove these countries for which there is more than 1 year missing
filter(!missing) %>%
# isolte the unfiltered countries
select(country) %>%
unlist %>% as.character
total.organs <- total.organs %>%
filter(country %in% few.missing.country)
donor.matrix <- acast(total.organs,
country ~ year,
value.var = "count.by.pop")
dim(donor.matrix)
superheat(as.matrix(donor.matrix) * 100000,
order.rows = order(organs.by.country),
grid.hline.col = "white",
grid.vline.col = "white",
# right plot
yr = as.numeric(as.character(hdi.match.2014$rank)),
yr.plot.type = "bar",
yr.axis.name = "Human Development Ranking",
yr.plot.size = 0.5,
# top plot
yt = organs.by.year,
yt.plot.type = "line",
yt.axis.name = "total number\nof transplants\nper year",
heat.na.col = "white",
left.label.size = 0.5,
left.label.text.size = 3,
bottom.label.col = "white",
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
padding = 0,
title = "Transplants from deceased donors")
library(knitr)
library(dplyr)
library(DT)
library(reshape2)
library(superheat)
organs.original <- read.csv("raw_data/global-organ-donation.csv")
DT::datatable(organs.original, fillContainer = T,
height = 600, options = list(scrollY = 350))
clean.colnames <- c("region", "country", "year",
"population",
"total.deceased.donors",
"brain.dead.donors",
"circulatory.death.donors",
"total.utilized.deceased.donors",
"utilized.brain.dead.donors",
"utilized.circulatory.death.donors",
"deceased.kidney.donors",
"living.kidney.donors",
"total.kidney.donors",
"deceased.liver.donors",
"domino.liver.donors",
"living.liver.donors",
"total.liver.donors",
"deceased.lung.donors",
"living.lung.donors",
"total.lung.donors",
"total.pancreas.donors",
"total.kidney.pancreas.donors",
"total.small.bowel.donors")
organs.clean <- organs.original
colnames(organs.clean) <- clean.colnames
organs.clean$population <- as.numeric(as.character(organs.clean$population))
countries.no.data <- organs.clean %>% group_by(country) %>%
# identify how many missing values are recorded for each country in the summary columns
summarise(region = unique(region),
n = n(),
missing.deceased = sum(is.na(total.deceased.donors)),
missing.brain.dead = sum(is.na(brain.dead.donors)),
missing.circulatory.death = sum(is.na(circulatory.death.donors))) %>%
# identify countries that have completely missing data
mutate(no.data = ((missing.deceased == 15) &
(missing.brain.dead == 15) &
(missing.circulatory.death == 15))) %>%
# filter to countries with no recorded data
filter(no.data) %>%
# arrange alphabetically by region and country
arrange(region, country) %>%
select(region, country)
organs.clean <- organs.clean %>%
filter(!(country %in% countries.no.data$country))
donor.totals <- organs.clean %>%
select(region, country, year, population,
total.deceased.donors)
donor.totals <- melt(donor.totals,
id.vars = c("region", "country", "year", "population"))
donor.totals <- donor.totals %>% select(region, country, year,
population, count = value)
kable(head(donor.totals))
donor.utilized <- organs.clean %>%
select(region, country, year, population,
utilized.brain.dead.donors,
utilized.circulatory.death.donors)
donor.utilized <- melt(donor.utilized,
id.vars = c("region", "country", "year", "population"))
donor.utilized$death <- sapply(strsplit(as.character(donor.utilized$variable), "\\."),
function(x) {
paste(x[x %in% c("brain", "circulatory")],
collapse = " ")
})
donor.utilized <- donor.utilized %>% select(region, country, year,
population, death, count = value)
organ.donor.death <- organs.clean %>%
select(region, country, year, population,
deceased.kidney.donors,
living.kidney.donors,
deceased.liver.donors,
domino.liver.donors,
living.liver.donors,
deceased.lung.donors,
living.lung.donors)
organ.donor.death <- melt(organ.donor.death,
id.vars = c("region", "country",
"year", "population"))
organ.donor.death$organ <- sapply(strsplit(as.character(organ.donor.death$variable), "\\."),
function(x) {
paste(x[x %in% c("kidney", "liver", "small",
"bowel", "lung", "pancreas")],
collapse = " ")
})
organ.donor.death$deceased <- sapply(strsplit(as.character(organ.donor.death$variable), "\\."),
function(x) {
paste(x[x %in% c("deceased", "living", "domino")],
collapse = " ")
})
organ.donor.death <- organ.donor.death %>% select(region, country, year,
population, organ, deceased,
count = value)
kable(head(organ.donor.death))
organ.donor.totals <- organs.clean %>%
select(region, country, year, population,
total.kidney.donors,
total.liver.donors,
total.lung.donors,
total.pancreas.donors,
total.kidney.pancreas.donors,
total.small.bowel.donors)
organ.donor.totals <- melt(organ.donor.totals,
id.vars = c("region", "country",
"year", "population"))
organ.donor.totals$organ <- sapply(strsplit(as.character(organ.donor.totals$variable), "\\."),
function(x) {
paste(x[x %in% c("kidney", "liver", "small",
"bowel", "lung", "pancreas")],
collapse = " ")
})
organ.donor.totals <- organ.donor.totals %>% select(region, country, year, population, organ, count = value)
organ.donor.totals <- organ.donor.totals %>%
mutate(count.by.pop = count / population)
organ.donor.death <- organ.donor.death %>%
mutate(count.by.pop = count / population)
donor.utilized <- donor.utilized %>%
mutate(count.by.pop = count / population)
donor.totals <- donor.totals %>%
mutate(count.by.pop = count / population)
total.organs <- donor.totals %>%
filter(year > 2005,
year < 2015)
few.missing.country <- total.organs %>%
group_by(country) %>%
# is there more than 1 year with missing data?
summarise(missing = sum(is.na(count.by.pop)) > 1) %>%
# remove these countries for which there is more than 1 year missing
filter(!missing) %>%
# isolte the unfiltered countries
select(country) %>%
unlist %>% as.character
total.organs <- total.organs %>%
filter(country %in% few.missing.country)
donor.matrix <- acast(total.organs,
country ~ year,
value.var = "count.by.pop")
hdi <- read.csv("raw_data/hdi.csv", header = F)
colnames(hdi) <- (hdi[2,])
hdi <- hdi[3:nrow(hdi),]
colnames(hdi)[1:2] <- c("rank", "country")
hdi <- melt(hdi, id.vars = c("country", "rank"))
colnames(hdi) <- c("country", "rank", "year", "hdi")
hdi$country <- gsub(" ", "", as.character(hdi$country))
rownames(donor.matrix)[!(rownames(donor.matrix) %in% unique(hdi$country))]
hdi[hdi$country == "CzechRepublic", "country"] <- "Czech Republic"
hdi[hdi$country == "DominicanRepublic", "country"] <- "Dominican Republic"
hdi[hdi$country == "Iran(IslamicRepublicof)", "country"] <- "Iran (Islamic Republic of)"
hdi[hdi$country == "NewZealand", "country"] <- "New Zealand"
hdi[hdi$country == "Korea(Republicof)", "country"] <- "Republic of Korea"
hdi[hdi$country == "SaudiArabia", "country"] <- "Saudi Arabia"
hdi[hdi$country == "SouthAfrica", "country"] <- "South Africa"
hdi[hdi$country == "UnitedKingdom", "country"] <- "United Kingdom"
hdi[hdi$country == "UnitedStates", "country"] <- "United States of America"
hdi[hdi$country == "Venezuela(BolivarianRepublicof)", "country"] <- "Venezuela (Bolivarian Republic of)"
hdi.match <- left_join(data.frame(country = rownames(donor.matrix)),
hdi,
by = "country")
hdi.match.2014 <- hdi.match %>% filter(year == 2014)
country.region <- organs.clean %>% select(country, region) %>% distinct
region.match <- left_join(data.frame(country = colnames(donor.matrix)),
country.region,
by = "country")
organs.by.year <- total.organs %>%
group_by(year) %>%
summarise(total = sum(count, na.rm = TRUE)) %>%
select(total) %>%
unlist
organs.by.country = total.organs %>%
group_by(country) %>%
summarise(total = mean(count / population, na.rm = TRUE) * 100000)
organs.by.country <- left_join(data.frame(country = colnames(donor.matrix)),
organs.by.country,
by = "country")
organs.by.country <- organs.by.country$total
superheat(as.matrix(donor.matrix) * 100000,
order.rows = order(organs.by.country),
grid.hline.col = "white",
grid.vline.col = "white",
# right plot
yr = as.numeric(as.character(hdi.match.2014$rank)),
yr.plot.type = "bar",
yr.axis.name = "Human Development Ranking",
yr.plot.size = 0.5,
# top plot
yt = organs.by.year,
yt.plot.type = "line",
yt.axis.name = "total number\nof transplants\nper year",
heat.na.col = "white",
left.label.size = 0.5,
left.label.text.size = 3,
bottom.label.col = "white",
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
padding = 0,
title = "Transplants from deceased donors")
dim(donor.matrix)
organs.by.country
organs.by.country = total.organs %>%
group_by(country) %>%
summarise(total = mean(count / population, na.rm = TRUE) * 100000)
organs.by.country
organs.by.country = total.organs %>%
group_by(country) %>%
summarise(total = mean(count / population, na.rm = TRUE) * 100000)
organs.by.country <- left_join(data.frame(country = rownames(donor.matrix)),
organs.by.country,
by = "country")
organs.by.country <- organs.by.country$total
organs.by.year <- total.organs %>%
group_by(year) %>%
summarise(total = sum(count, na.rm = TRUE)) %>%
select(total) %>%
unlist
organs.by.year
setwd("~/Google Drive/Berkeley PhD/Packages/Supervised Heatmaps/Manuscript/R/fMRI")
