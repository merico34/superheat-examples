return(mean(width))
})
data.frame(k = 5:20, width = sil.width) %>%
ggplot(aes(x = k, y = width)) +
geom_line() + geom_point() +
scale_y_continuous(name = "Avergae silhouette width")
warnings()
library(cluster)
generateClusters <- function(similarity.mat, k.range, N) {
lapply(k.range, function(k) {
print(k)
lapply(1:N, function(i) {
# randomly sample 90% of words
random.subset <- sample(1:nrow(similarity.mat),
0.9 * nrow(similarity.mat))
cosine.sample <- similarity.mat[random.subset, random.subset]
# perform clustering
pam.clusters <- pam(1 - cosine.sample,
k = k, diss = TRUE)
})
})
}
if (!file.exists("results/cluster-iterations.RData")) { # run only if not saved
cluster.iterations <- generateClusters(cosine.similarity.full,
k.range = 5:40,
N = 100)
# save data for future use
save(cluster.iterations, file = "results/cluster-iterations.RData")
} else {
load("results/cluster-iterations.RData")
}
join.cluster.iterations <- lapply(cluster.iterations, function(list) {
# for each list of iterations (for a specific k),
# full-join the membership vectors into a data frame
# (there will be missing values in each column)
Reduce(function(x, y) {
full_join(x, y, by = "words")
},
lapply(list, function(cluster.obj) {
data.frame(words = names(cluster.obj$clustering),
clusters = cluster.obj$clustering)
}))
})
library(Rcpp)
library(reshape2)
sourceCpp('code/Rcpp_similarity.cpp')
jaccard.similarity <- sapply(join.cluster.iterations,
function(cluster.iteration) {
sapply(seq(2, ncol(cluster.iteration) - 1, by = 2),
function(i) {
# calculate the Jaccard similarity between each pair of columns
cluster.iteration.pair <- cluster.iteration[ , c(i, i + 1)]
colnames(cluster.iteration.pair) <- c("cluster1", "cluster2")
cluster.iteration.pair <- cluster.iteration.pair %>%
filter(!is.na(cluster1), !is.na(cluster2))
# remove the words that are missing from at least one cluster
RcppSimilarity(cluster.iteration.pair[ , 1],
cluster.iteration.pair[ , 2])
})
})
jaccard.similarity.long <- melt(jaccard.similarity)
colnames(jaccard.similarity.long) <- c("iter", "k", "similarity")
jaccard.similarity.long$k <- jaccard.similarity.long$k + 4
jaccard.similarity.long <- jaccard.similarity.long %>%
filter(k <= 20)
jaccard.similarity.avg <- jaccard.similarity.long %>%
group_by(k) %>%
summarise(similarity = mean(similarity))
ggplot(jaccard.similarity.long) +
geom_boxplot(aes(x = k, y = similarity, group = k)) +
geom_line(aes(x = k, y = similarity),
linetype = "dashed",
data = jaccard.similarity.avg) +
ggtitle("Jaccard similarity versus k")
ggsave("../../Figures/jaccard.png", height = 4, width = 8)
word.clusters <- pam(1 - cosine.similarity.full, k = 12, diss = TRUE)
word.clusters$medoids
word.membership <- factor(word.clusters$clustering)
levels(word.membership) <- word.clusters$medoids
cosine.silhouette <-
cosineSilhouette(cosine.similarity.full, word.membership)
rownames(cosine.silhouette) <- cosine.silhouette$word
cosine.silhouette <- cosine.silhouette[rownames(cosine.similarity.full), ]
avg.sil.width <- cosine.silhouette %>% group_by(membership) %>%
summarise(avg.width = mean(width)) %>% arrange(avg.width)
word.membership <- factor(word.membership,
levels = avg.sil.width$membership)
word.membership.padded <- paste0(word.membership, " ")
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(a)",
title.size = 14)
png("../../Figures/word-cosine-cluster.png", height = 1000, width = 750)
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(a)",
title.size = 14)
dev.off()
png("../../Figures/word-cosine-cluster-smooth.png", height = 1000, width = 750)
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
smooth.heat = T,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(b)",
title.size = 14)
dev.off()
cosine.silhouette$width
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(a)",
title.size = 14)
word.membership.padded
word.membership.padded <- paste0(word.membership, " ")
word.membership <- factor(word.membership,
levels = avg.sil.width$membership)
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(a)",
title.size = 14)
avg.sil.width$membership
word.membership
avg.sil.width$membership
word.membership.padded <- factor(word.membership.padded,
levels = paste0(avg.sil.width$membership, " "))
word.membership.padded
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(a)",
title.size = 14)
png("../../Figures/word-cosine-cluster.png", height = 1000, width = 750)
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(a)",
title.size = 14)
dev.off()
png("../../Figures/word-cosine-cluster-smooth.png", height = 1000, width = 750)
superheat(cosine.similarity.full,
membership.rows = word.membership.padded,
membership.cols = word.membership.padded,
yt = cosine.silhouette$width,
yt.axis.name = "Cosine\nsilhouette\nwidth",
yt.plot.type = "bar",
yt.bar.col = "grey35",
yt.axis.name.size = 18,
yt.axis.size = 18,
order.rows = order(cosine.silhouette$width),
order.cols = order(cosine.silhouette$width),
bottom.label.col = c("grey95", "grey80"),
bottom.label.text.angle = 90,
bottom.label.text.alignment = "right",
bottom.label.size = 0.28,
bottom.label.text.size = 8,
left.label.col = c("grey95", "grey80"),
left.label.text.alignment = "right",
left.label.size = 0.26,
left.label.text.size = 8,
smooth.heat = T,
legend.height = 0.2,
legend.text.size = 18,
legend.width = 2,
title = "(b)",
title.size = 14)
dev.off()
common.words[1:40][!(common.words[1:40] %in% rownames(GoogleNews.common))]
sort(rownames(GoogleNews))
sort(rownames(GoogleNews.common))
sort(rownames(GoogleNews[, 1]))
sort(GoogleNews[, 1])
sort(GoogleNews[, 1])[1000:2000]
sort(GoogleNews[, 1])[10000:11000]
GoogleNews[, 1][which(tolower(GoogleNews[, 1])) == "clinton"), 1]
GoogleNews[, 1][which(tolower(GoogleNews[, 1]) == "clinton"), 1]
GoogleNews[, 1][which(tolower(GoogleNews[, 1]) == "clinton")]
GoogleNews[, 1][which(tolower(GoogleNews[, 1]) == "bill")]
GoogleNews[, 1][which(tolower(GoogleNews[, 1]) == "back")]
855 + 145
library(cluster)
generateClusters <- function(similarity.mat, k.range, N) {
lapply(1:N, function(i) {
random.subset <- sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat))
lapply(k.range, function(k) {
# randomly sample 90% of words
cosine.sample <- similarity.mat[random.subset, random.subset]
# perform clustering
pam.clusters <- pam(1 - cosine.sample, k = k, diss = TRUE)
})
})
}
cluster.iterations <- generateClusters(cosine.similarity.full,
k.range = 5:20,
N = 100)
generateClusters <- function(similarity.mat, k.range, N) {
lapply(1:N, function(i) {
print(paste("iteration", i))
random.subset <- sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat))
lapply(k.range, function(k) {
# randomly sample 90% of words
cosine.sample <- similarity.mat[random.subset, random.subset]
# perform clustering
pam.clusters <- pam(1 - cosine.sample, k = k, diss = TRUE)
})
})
}
cluster.iterations <- generateClusters(cosine.similarity.full,
k.range = 5:20,
N = 100)
save(cluster.iterations, file = "results/cluster-iterations.RData")
kable(head(join.cluster.iterations))
save(cluster.iterations, file = "results/cluster-iterations.RData")
join.cluster.iterations <- lapply(cluster.iterations, function(list) {
# for each list of iterations (for a specific k),
# full-join the membership vectors into a data frame
# (there will be missing values in each column)
Reduce(function(x, y) full_join(x, y, by = "words"),
lapply(list, function(cluster.obj) {
df <- data.frame(words = names(cluster.obj$clustering),
clusters = cluster.obj$clustering)
colnames(df) <- c("words", paste0("membership", 1:100))
}))
})
paste0("membership", 1:100)
join.cluster.iterations <- lapply(cluster.iterations, function(list) {
# for each list of iterations (for a specific k),
# full-join the membership vectors into a data frame
# (there will be missing values in each column)
Reduce(function(x, y) full_join(x, y, by = "words"),
lapply(list, function(cluster.obj) {
df <- data.frame(words = names(cluster.obj$clustering),
clusters = cluster.obj$clustering)
print(head(df))
}))
})
lapply(join.cluster.iterations, function(x) colnames(x) <- c("words", paste0("membership", 1:100)))
join.cluster.iterations <- lapply(cluster.iterations, function(list) {
# for each list of iterations (for a specific k),
# full-join the membership vectors into a data frame
# (there will be missing values in each column)
Reduce(function(x, y) full_join(x, y, by = "words"),
lapply(list, function(cluster.obj) {
df <- data.frame(words = names(cluster.obj$clustering),
clusters = cluster.obj$clustering)
}))
})
lapply(join.cluster.iterations, function(x) colnames(x) <- c("words", paste0("membership", 1:100)))
dim(join.cluster.iterations[[1]])
lapply(join.cluster.iterations, function(x) colnames(x) <- c("words", paste0("k", 5:20)))
join.cluster.iterations[[1]]
lapply(join.cluster.iterations, function(x) colnames(x) <- c("words", paste0("k", 5:20)))
lapply(join.cluster.iterations, function(x) {
colnames(x) <- c("words", paste0("k", 5:20))
return(x)
})
join.cluster.iterations <- lapply(join.cluster.iterations, function(x) {
colnames(x) <- c("words", paste0("k", 5:20))
return(x)
})
kable(head(join.cluster.iterations[[1]][, 1:9]))
kable(head(join.cluster.iterations[[1]])
kable(head(join.cluster.iterations[[1]]))
kable(head(join.cluster.iterations[[1]]))
kable(head(join.cluster.iterations[[50]]))
kable(head(join.cluster.iterations[[35]]))
kable(head(join.cluster.iterations[[99]]))
kable(head(join.cluster.iterations[[20]]))
kable(head(join.cluster.iterations[[1]]))
cluster.iterations[[1]]
length(cluster.iterations)
random.subset.list <- lapply(1:100, sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat))
random.subset.list <- lapply(1:100, sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat)))
random.subset.list <- lapply(1:100, function(i) sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat)))
similarity.mat <- cosine.similarity.full
random.subset.list <- lapply(1:100, function(i) sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat)))
random.subset.list
generateClusters <- function(similarity.mat, k.range, N) {
random.subset.list <- lapply(1:100, function(i) {
sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat))
})
lapply(k.range, function(k) {
print(paste("k =", k))
lapply(1:N, function(i) {
# randomly sample 90% of words
cosine.sample <- similarity.mat[random.subset.list[[i]], random.subset[[i]]]
# perform clustering
pam.clusters <- pam(1 - cosine.sample, k = k, diss = TRUE)
})
})
}
cluster.iterations <- generateClusters(cosine.similarity.full,
k.range = 5:20,
N = 2)
generateClusters <- function(similarity.mat, k.range, N) {
random.subset.list <- lapply(1:100, function(i) {
sample(1:nrow(similarity.mat), 0.9 * nrow(similarity.mat))
})
lapply(k.range, function(k) {
print(paste("k =", k))
lapply(1:N, function(i) {
# randomly sample 90% of words
cosine.sample <- similarity.mat[random.subset.list[[i]], random.subset.list[[i]]]
# perform clustering
pam.clusters <- pam(1 - cosine.sample, k = k, diss = TRUE)
})
})
}
cluster.iterations <- generateClusters(cosine.similarity.full,
k.range = 5:20,
N = 2)
cluster.iterations
cluster.iterations <- generateClusters(cosine.similarity.full,
k.range = 5:20,
N = 100)
save(cluster.iterations, file = "results/cluster-iterations.RData")
join.cluster.iterations <- lapply(cluster.iterations, function(list) {
# for each list of iterations (for a specific k),
# full-join the membership vectors into a data frame
# (there will be missing values in each column)
Reduce(function(x, y) full_join(x, y, by = "words"),
lapply(list, function(cluster.obj) {
df <- data.frame(words = names(cluster.obj$clustering),
clusters = cluster.obj$clustering)
}))
})
join.cluster.iterations <- lapply(join.cluster.iterations, function(x) {
colnames(x) <- c("words", paste0("k", 5:20))
return(x)
})
warnings()
join.cluster.iterations <- lapply(join.cluster.iterations, function(x) {
colnames(x) <- c("words", paste0("membership", 1:100))
return(x)
})
kable(head(join.cluster.iterations[[1]]))
head(join.cluster.iterations[[1]])
library(Rcpp)
library(reshape2)
sourceCpp('code/Rcpp_similarity.cpp')
jaccard.similarity <- sapply(join.cluster.iterations,
function(cluster.iteration) {
sapply(seq(2, ncol(cluster.iteration) - 1, by = 2),
function(i) {
# calculate the Jaccard similarity between each pair of columns
cluster.iteration.pair <- cluster.iteration[ , c(i, i + 1)]
colnames(cluster.iteration.pair) <- c("cluster1", "cluster2")
# remove words that do not appear in both 90% sub-samples
cluster.iteration.pair <- cluster.iteration.pair %>%
filter(!is.na(cluster1), !is.na(cluster2))
# Calcualte the Jaccard similarity between the two cluster vectors
RcppSimilarity(cluster.iteration.pair[ , 1],
cluster.iteration.pair[ , 2])
})
})
jaccard.similarity.long <- melt(jaccard.similarity)
colnames(jaccard.similarity.long) <- c("iter", "k", "similarity")
jaccard.similarity.long$k <- jaccard.similarity.long$k + 4
jaccard.similarity.long <- jaccard.similarity.long %>%
filter(k <= 20)
jaccard.similarity.avg <- jaccard.similarity.long %>%
group_by(k) %>%
summarise(similarity = mean(similarity))
ggplot(jaccard.similarity.long) +
geom_boxplot(aes(x = k, y = similarity, group = k)) +
geom_line(aes(x = k, y = similarity),
linetype = "dashed",
data = jaccard.similarity.avg) +
ggtitle("Jaccard similarity versus k")
ggsave("../../Figures/jaccard.png", height = 4, width = 8)
